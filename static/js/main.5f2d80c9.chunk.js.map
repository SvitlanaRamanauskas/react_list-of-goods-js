{"version":3,"sources":["components/Good/Good.jsx","components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["Good","good","GoodList","goods","map","SORT_ALPHABET","SORT_LENGTH","goodsFromServer","App","useState","sortCondition","setSortCondition","reverseCondition","setReverseCondition","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iOAAO,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACrB,OACE,oBAAI,UAAQ,OAAZ,SAAoBA,ICAjB,SAASC,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACzB,OACE,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAACD,EAAD,CAAMC,KAAMA,GAAWA,QCD/B,IAAMI,EAAgB,WAChBC,EAAc,SAEPC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0BK,IAAMC,EAAM,WACjB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgDF,oBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KAEMC,EA3BR,SAA0BX,EAA1B,GAAuE,IAApCO,EAAmC,EAAnCA,cAAeE,EAAoB,EAApBA,iBAC1CG,EAAa,YAAOZ,GAmB1B,OAjBIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,IAAK,WACH,OAAOO,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXR,GACFG,EAAcM,UAGTN,EAOcO,CACnBf,EAAiB,CAAEG,gBAAeE,qBAGpC,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMd,EAAiBN,IAChCkB,UAAS,yBAAoBb,IAAkBL,EAAgB,GAAK,YAHtE,iCAQA,wBACEmB,KAAK,SACLC,QAAS,kBAAMd,EAAiBL,IAChCiB,UAAS,4BAAuBb,IAAkBJ,EAAc,GAAK,YAHvE,4BAQA,wBACEkB,KAAK,SACLC,QAAS,kBAAMZ,GAAqBD,IACpCW,UAAS,6BAA4C,IAArBX,EAA4B,GAAK,YAHnE,sBAQEF,GAAiBE,IACjB,wBACEY,KAAK,SACLC,QAAS,WACPd,EAAiB,IACjBE,GAAoB,IAEtBU,UAAU,4BANZ,sBAaJ,cAACrB,EAAD,CAAUC,MAAOW,QC1FvBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5f2d80c9.chunk.js","sourcesContent":["export function Good({ good }) {\n  return (\n    <li data-cy=\"Good\">{good}</li>\n  );\n}\n","import { Good } from '../Good';\n\nexport function GoodList({ goods }) {\n  return (\n    <ul>\n      {goods.map(good => (\n        <Good good={good} key={good} />\n      ))}\n    </ul>\n  );\n}\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { GoodList } from './components/GoodList';\n\nconst SORT_ALPHABET = 'alphabet';\nconst SORT_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, { sortCondition, reverseCondition }) {\n  const preparedGoods = [...goods];\n\n  if (sortCondition) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortCondition) {\n        case 'alphabet':\n          return good1.localeCompare(good2);\n        case 'length':\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseCondition) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortCondition, setSortCondition] = useState('');\n  const [reverseCondition, setReverseCondition] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortCondition, reverseCondition },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortCondition(SORT_ALPHABET)}\n          className={`button is-info ${sortCondition === SORT_ALPHABET ? '' : 'is-light'}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortCondition(SORT_LENGTH)}\n          className={`button is-success ${sortCondition === SORT_LENGTH ? '' : 'is-light'}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReverseCondition(!reverseCondition)}\n          className={`button is-warning ${reverseCondition === true ? '' : 'is-light'}`}\n        >\n          Reverse\n        </button>\n\n        {(sortCondition || reverseCondition) && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSortCondition('');\n              setReverseCondition(false);\n            }}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}